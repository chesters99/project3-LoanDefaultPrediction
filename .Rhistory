model8 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward')
summary(model8)
d2=length(model8$coefficients)-1
d2
probs8 = predict(model8, newdata = test, type='response')
conf_matrix8 = table(actuals, probs8 > 0.25)
conf_matrix8
a2=conf_matrix8[1,2]
a2
b2 =conf_matrix8[2,1]
b2
probs8 = predict(model8, newdata = test, type='response')
conf_matrix8 = table(actuals, probs8 > 0.25)
conf_matrix8
a2=conf_matrix8[1,2]
a2
b2 =conf_matrix8[2,1]
b2
roc8 = roc(Purchase ~ probs8, data = test)
c2 = round(roc8$auc,3)
c2
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:length(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5   = predict(model5, newdata = test, type='response')
actuals = unclass(test$Purchase) -1
conf_matrix5 = table(actuals, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
# Q8,9,10,11
model_null = glm(Purchase ~ 1, data=train, family=binomial)
model8 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward')
summary(model8)
d2=length(model8$coefficients)-1
d2
probs8 = predict(model8, newdata = test, type='response')
conf_matrix8 = table(actuals, probs8 > 0.25)
conf_matrix8
a2=conf_matrix8[1,2]
a2
b2 =conf_matrix8[2,1]
b2
roc8 = roc(Purchase ~ probs8, data = test)
c2 = round(roc8$auc,3)
c2
# Q12,13,14,15
model_null = glm(Purchase ~ 1, data=train, family=binomial)
# Q12,13,14,15
model_null = glm(Purchase ~ 1, data=train, family=binomial)
model12 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward',k=log(n))
n=dim(train)[1]
model12 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward',k=log(n))
summary(model12)
d3=length(model12$coefficients)-1
d3
probs12 = predict(model12, newdata = test, type='response')
conf_matrix12 = table(actuals, probs12 > 0.25)
conf_matrix12
a3=conf_matrix12[1,2]
a3
b3 =conf_matrix12[2,1]
b3
roc12 = roc(Purchase ~ probs12, data = test)
c3 = round(roc12$auc,3)
c3
dim(train)[2]
p = dim(train)[2]
X = data.matrix(train[,-p])
Y = train[,p]
View(X)
# Q16,17,18,19
library(glmnet)
p = dim(train)[2]
X = data.matrix(train[,-p])
Y = train[,p]
model16 = glmnet(X,Y,family="binomial",alpha=1, lambda=0.004)
summary(model16)
d4=length(model16$coefficients)-1
d4
model16
coeffs16 = predict(heart.cv, lambda=heart.cv$lambda.1se, type="coefficients")
probs16 = predict(heart.cv, lambda=heart.cv$lambda.1se, type="response")
coeffs16 = predict(model16, lambda=0.004, type="coefficients")
coeffs16
coeffs16[coeffs16>0]
length(coeffs16[coeffs16>0])
newX = data.matrix(test[,-p])
probs16  = predict(model16, newx=newX, lambda=0.004, type="response")
conf_matrix16 = table(actuals, probs8 > 0.25)
conf_matrix16
a4=conf_matrix16[1,2]
a4
b2 =conf_matrix16[2,1]
b4
b4 =conf_matrix16[2,1]
b4
roc16 = roc(Purchase ~ probs16, data = test)
roc16 = pROC::roc(Purchase ~ probs16, data = test)
c4 = round(roc16$auc,3)
c4
View(probs16)
model16 = cv.glmnet(X,Y,family="binomial",alpha=1, lambda=0.004)
model16 = glmnet(X,Y,family="binomial",alpha=1, lambda=0.004)
coeffs16 = predict(model16, lambda=0.004, type="coefficients")
d4=length(coeffs16[coeffs16>0])-1
# Q16,17,18,19
library(glmnet)
p = dim(train)[2]
X = data.matrix(train[,-p])
newX = data.matrix(test[,-p])
Y = train[,p]
model16 = glmnet(X,Y,family="binomial",alpha=1, lambda=0.004)
coeffs16 = predict(model16, lambda=0.004, type="coefficients")
d4=length(coeffs16[coeffs16>0])-1
d4
coeffs16$x
coeffs16
coeffs16[coeffs16>0]
model16 = glmnet(X,Y,family="binomial",alpha=1, lambda=lam)
coeffs16 = predict(model16, lambda=lam, type="coefficients")
d4=length(coeffs16[coeffs16>0])-1
d4
probs16  = predict(model16, newx=newX, lambda=lam, type="response")
conf_matrix16 = table(actuals, probs8 > 0.25)
conf_matrix16
a4=conf_matrix16[1,2]
a4
b4 =conf_matrix16[2,1]
b4
library(pROC)
roc16 = roc(Purchase ~ probs16, data = test)
roc16 = roc(Purchase ~ probs16[,1], data = test)
c4 = round(roc16$auc,3)
c4
# Q16,17,18,19
library(glmnet)
roc16 = roc(Purchase ~ probs16[,1], data = test)
c4 = round(roc16$auc,3)
c4
logit2prob <- function(logit){
return(exp(logodds)/(1+exp(logodds)))
}
prob2logit <- function(prob){
return(log(prob/(1-prob)))
}
# Q1
gpa=3.5; hours=3
logodds = -6 + 0.5*hours + gpa
a = round(logit2prob(logodds),2)
a
# Q2
prob2logit(0.5)
b= 2*(6 -3.5)
b
# Q3
'0 = 6 + 0*x1 -1*x2'
'x2 = 6'
# Q4
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:length(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5   = predict(model5, newdata = test, type='response')
actuals = unclass(test$Purchase) -1
conf_matrix5 = table(actuals, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
# Q8,9,10,11
model_null = glm(Purchase ~ 1, data=train, family=binomial)
model8 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward')
summary(model8)
d2=length(model8$coefficients)-1
d2
probs8 = predict(model8, newdata = test, type='response')
conf_matrix8 = table(actuals, probs8 > 0.25)
conf_matrix8
a2=conf_matrix8[1,2]
a2
b2 =conf_matrix8[2,1]
b2
roc8 = roc(Purchase ~ probs8, data = test)
c2 = round(roc8$auc,3)
c2
# Q12,13,14,15
model_null = glm(Purchase ~ 1, data=train, family=binomial)
n=dim(train)[1]
model12 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward',k=log(n))
summary(model12)
d3=length(model12$coefficients)-1
d3
probs12 = predict(model12, newdata = test, type='response')
conf_matrix12 = table(actuals, probs12 > 0.25)
conf_matrix12
a3=conf_matrix12[1,2]
a3
b3 =conf_matrix12[2,1]
b3
roc12 = roc(Purchase ~ probs12, data = test)
c3 = round(roc12$auc,3)
c3
# Q16,17,18,19
library(glmnet)
p = dim(train)[2]
X = data.matrix(train[,-p])
newX = data.matrix(test[,-p])
Y = train[,p]
lam = 0.004
model16 = glmnet(X,Y,family="binomial",alpha=1, lambda=lam)
coeffs16 = predict(model16, lambda=lam, type="coefficients")
d4=length(coeffs16[coeffs16>0])-1
d4
probs16  = predict(model16, newx=newX, lambda=lam, type="response")
conf_matrix16 = table(actuals, probs8 > 0.25)
conf_matrix16
a4=conf_matrix16[1,2]
a4
b4 =conf_matrix16[2,1]
b4
roc16 = roc(Purchase ~ probs16[,1], data = test)
c4 = round(roc16$auc,3)
c4
# Q1
gpa=3.5; hours=3
logodds = -6 + 0.5*hours + gpa
a = round(logit2prob(logodds),2)
a
# Q2
prob2logit(0.5)
b= 2*(6 -3.5)
b
# Q5,6,7
library(ISLR)
library(pROC)
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:length(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5   = predict(model5, newdata = test, type='response')
actuals = unclass(test$Purchase) -1
conf_matrix5 = table(actuals, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
# Q8,9,10,11
model_null = glm(Purchase ~ 1, data=train, family=binomial)
model8 = step(model_null, scope=list(lower=model_null, upper=model5), trace=0,  direction='forward')
summary(model8)
d2=length(model8$coefficients)-1
d2
probs8 = predict(model8, newdata = test, type='response')
conf_matrix8 = table(actuals, probs8 > 0.25)
conf_matrix8
a2=conf_matrix8[1,2]
a2
b2 =conf_matrix8[2,1]
b2
roc8 = roc(Purchase ~ probs8, data = test)
c2 = round(roc8$auc,3)
c2
# Q12,13,14,15
model_null = glm(Purchase ~ 1, data=train, family=binomial)
n=dim(train)[1]
model12 = step(model_null, scope=list(lower=model_null,upper=model5),trace=0,direction='forward',k=log(n))
summary(model12)
d3=length(model12$coefficients)-1
d3
probs12 = predict(model12, newdata = test, type='response')
conf_matrix12 = table(actuals, probs12 > 0.25)
conf_matrix12
a3=conf_matrix12[1,2]
a3
b3 =conf_matrix12[2,1]
b3
roc12 = roc(Purchase ~ probs12, data = test)
c3 = round(roc12$auc,3)
c3
# Q16,17,18,19
library(glmnet)
p = dim(train)[2]
X = data.matrix(train[,-p])
newX = data.matrix(test[,-p])
Y = train[,p]
lam = 0.004
model16 = glmnet(X,Y,family="binomial",alpha=1, lambda=lam)
coeffs16 = predict(model16, lambda=lam, type="coefficients")
d4=length(coeffs16[coeffs16>0])-1
d4
probs16  = predict(model16, newx=newX, lambda=lam, type="response")
conf_matrix16 = table(actuals, probs8 > 0.25)
conf_matrix16
a4=conf_matrix16[1,2]
a4
b4 =conf_matrix16[2,1]
b4
roc16 = roc(Purchase ~ probs16[,1], data = test)
c4 = round(roc16$auc,3)
c4
model5 = glm(Purchase ~ ., data=train, family=binomial())
probs5   = predict(model5, newdata = test, type='response')
actuals = unclass(test$Purchase) -1
conf_matrix5 = table(actuals, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:length(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial())
probs5   = predict(model5, newdata = test, type='response')
actuals = unclass(test$Purchase) -1
conf_matrix5 = table(actuals, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
model5 = glm(Purchase ~ ., data=train, family="binomial")
probs5   = predict(model5, newdata = test, type='response')
actuals = unclass(test$Purchase) -1
conf_matrix5 = table(actuals, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
?glm
model5 = glm(Purchase ~ ., data=train, family="qwe")
model5 = glm(Purchase ~ ., data=train, family="binomial()")
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5   = predict(model5, newdata = test, type='response')
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
conf_matrix5 = table(test$Purchase, probs5 < 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
conf_matrix5 = table(test$Purchase, probs5 < 0)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5   = predict(model5, newdata = test, type='response')
conf_matrix5 = table(test$Purchase, probs5 > 0.5)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
conf_matrix5 = table(test$Purchase, probs5 > 0.5)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5 = predict(model5, newdata=test, type='response')
summary(model5)
conf_matrix5
test = Caravan[1:1000,]
train = Caravan[1001:length(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5 = predict(model5, newdata=test, type='response')
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
dim(test)
dim(train)
dim(train)
dim(test)
dim(Caravan)
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:nrow(Caravan),]
dim(Caravan)
dim(test)
dim(train)
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5 = predict(model5, newdata=test, type='response')
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(Purchase ~ probs5, data = test)
c1 = round(roc5$auc,3)
c1
auc(roc5)
roc5 = roc(Purchase ~ probs5, data = test)
auc(roc5)
auc(roc5, prob=0.25)
roc5 = roc(Purchase, probs5)
roc5 = roc(test$Purchase, probs5)
c1 = round(roc5$auc,3)
c1
auc(roc5, prob=0.25)
auc(roc5)
detach("package:glmnet", unload=TRUE)
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:nrow(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5 = predict(model5, newdata=test, type='response')
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = roc(test$Purchase, probs5)
c1 = round(roc5$auc,3)
c1
roc5 = pROC::roc(test$Purchase, probs5)
c1 = round(roc5$auc,3)
c1
auc(roc5)
# Q5,6,7
library(ISLR)
library(pROC)
test = Caravan[1:1000,]
train = Caravan[1001:nrow(Caravan),]
model5 = glm(Purchase ~ ., data=train, family=binomial)
probs5 = predict(model5, newdata=test, type='response')
conf_matrix5 = table(test$Purchase, probs5 > 0.25)
conf_matrix5
a1 =conf_matrix5[1,2]
a1
b1 =conf_matrix5[2,1]
b1
roc5 = pROC::roc(test$Purchase, probs5)
c1 = round(roc5$auc,3)
c1
auc(roc5)
roc5 = pROC::roc(Purchase ~ probs8, data = test)
c1 = round(roc5$auc,3)
c1
source('~/Documents/UIUC/CS598_Practical_Statistical_Learning/project3/evaluate.R')
setwd("~/Documents/UIUC/CS598_Practical_Statistical_Learning/project3")
source('~/Documents/UIUC/CS598_Practical_Statistical_Learning/project3/evaluate.R')
source('~/Documents/UIUC/CS598_Practical_Statistical_Learning/project3/evaluate.R')
library(gbm)
library("gbm", lib.loc="~/anaconda3/lib/R/library")
install.packages(c("callr", "car", "carData", "caret", "cli", "coda", "data.table", "devtools", "digest", "dimRed", "dplyr", "evaluate", "fansi", "FNN", "gam", "ggplot2", "gistr", "git2r", "h2o", "htmlwidgets", "imager", "ipred", "IRdisplay", "IRkernel", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "magic", "maptools", "MASS", "Matrix", "matrixStats", "mgcv", "mime", "ModelMetrics", "mongolite", "nloptr", "odbc", "openssl", "openxlsx", "packrat", "pkgconfig", "pls", "pROC", "processx", "psych", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readbitmap", "recipes", "repr", "reprex", "RgoogleMaps", "rjson", "RJSONIO", "rlang", "robustbase", "rpart.plot", "rsconnect", "rstudioapi", "sandwich", "scales", "shiny", "sm", "sp", "sparklyr", "spData", "survival", "testthat", "tidyr", "tidyselect", "tinytex", "tseries", "TTR", "xfun", "xgboost", "xtable", "xts", "zoo"))
library(gbm)
library(gbm)
